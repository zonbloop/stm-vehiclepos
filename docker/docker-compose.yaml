version: '3.6'

services:
  akhq:
    image: tchiotludo/akhq
    restart: unless-stopped
    environment:
      AKHQ_CONFIGURATION: |
        akhq:
          connections:
            docker-kafka-server:
              properties:
                bootstrap.servers: "broker:29092"
              schema-registry:
                url: "http://schema-registry:8085"
              connect:
                - name: "connect"
                  url: "http://connect:8083"

    ports:
      - 8080:8080
    networks:
      - kafka-flink

  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000      
    healthcheck:
      test: ["CMD", "bash", "-c", "echo 'ruok' | nc localhost 2181"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - kafka-flink

  broker:
    image: confluentinc/cp-kafka:7.4.0
    hostname: broker
    container_name: broker
    depends_on:
      zookeeper:
        condition: service_healthy
    ports:
      - "9092:9092"
      - "9101:9101"
      - "9094:9094"

    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CONFLUENT_BALANCER_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_JMX_PORT: 9101
      KAFKA_JMX_HOSTNAME: localhost
      KAFKA_MESSAGE_MAX_BYTES: 10485760          # Increase maximum message size to 10 MB
      KAFKA_REPLICA_FETCH_MAX_BYTES: 10485760    # Increase maximum fetch size for replicas to 10 MB

    healthcheck:
      test: ["CMD", "bash", "-c", 'nc -z localhost 9092']
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - kafka-flink

  jobmanager:
    image: flinkazure
    ports:
      - "8089:8081"
    command: jobmanager
    environment:
      FLINK_ROLE: jobmanager
      JOB_MANAGER_RPC_ADDRESS: jobmanager
      FLINK_JM_HEAP: 1024m  # 1GB for the JobManager
    networks:
      - kafka-flink

  taskmanager:
    image: flinkazure
    depends_on:
      - jobmanager
    command: taskmanager
    environment:
      FLINK_ROLE: taskmanager
      TASK_MANAGER_NUMBER_OF_TASK_SLOTS: 2 # Number of slots per TaskManager
      #FLINK_TM_HEAP: 2048m  
      JOB_MANAGER_RPC_ADDRESS: jobmanager
    volumes:
      - ./flink-conf.yaml:/opt/flink/conf/flink-conf.yaml
    networks:
      - kafka-flink
    deploy:
      resources:
        limits:
          memory: 8g
      replicas: 2  # Specify the desired number of taskmanager replicas here

volumes:
  grafana-data:

networks:
  kafka-flink:
    driver: bridge
